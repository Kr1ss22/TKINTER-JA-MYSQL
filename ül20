import tkinter as tk  
from tkinter import ttk, messagebox  
import sqlite3 

DB_FILE = "kmustkivi.db" 

# Funktsioon, mis laadib andmed andmebaasist tabelisse (Treeview)
def load_data_from_db(tree, search_query=""):
    # Eemalda olemasolevad read tabelist
    for item in tree.get_children():
        tree.delete(item)
    
    conn = sqlite3.connect(DB_FILE)  # Ühenda andmebaasiga
    cur = conn.cursor()
    try:
        if search_query:  # Kui otsingutekst on olemas
            cur.execute("""
                SELECT id, eesnimi, perenimi, email, tel, profiilipilt FROM users
                WHERE eesnimi LIKE ? OR perenimi LIKE ?
            """, (f'%{search_query}%', f'%{search_query}%'))
        else:  # Kui otsingut pole, lae kõik andmed
            cur.execute("SELECT id, eesnimi, perenimi, email, tel, profiilipilt FROM users")
        rows = cur.fetchall()  # Võta kõik read
        for row in rows:  # Lisa iga rida tabelisse
            tree.insert("", "end", values=row)
    except Exception as e:  # Kui midagi läheb valesti
        messagebox.showerror("Tõrge", f"Andmebaasi viga: {e}")
    finally:
        conn.close()  # Sulge andmebaasi ühendus

# Funktsioon otsingunupu jaoks
def on_search():
    search_query = search_entry.get()  # Võta otsinguväli
    load_data_from_db(tree, search_query)  # Lae andmed otsingukriteeriumiga

# Funktsioon uue kasutaja lisamiseks
def open_user_form():
    # Funktsioon, mis käivitub "Lisa" nupu vajutamisel vormis
    def add_user():
        # Kontrolli, et kõik kohustuslikud väljad oleks täidetud
        if not eesnimi.get() or not perenimi.get() or not email.get() or not tel.get():
            messagebox.showerror("Viga", "Palun täida kõik kohustuslikud väljad!")
            return
        try:
            conn = sqlite3.connect(DB_FILE)
            cur = conn.cursor()
            # Lisa uus kasutaja andmebaasi
            cur.execute("""
                INSERT INTO users (eesnimi, perenimi, email, tel, profiilipilt)
                VALUES (?, ?, ?, ?, ?)
            """, (eesnimi.get(), perenimi.get(), email.get(), tel.get(), profiilipilt.get()))
            conn.commit()  # Salvesta muudatused
        except Exception as e:  # Kui lisamisel tekib viga
            messagebox.showerror("Tõrge", f"Midagi läks valesti: {e}")
            return
        finally:
            conn.close()  # Sulge andmebaasi ühendus
        
        messagebox.showinfo("Edu", "Kasutaja lisatud!")  # Teade edukast lisamisest
        window.destroy()  # Sule lisamise aken
        load_data_from_db(tree)  # Värskenda tabelit

    # Loo uus Tkinter aken (TopLevel) kasutaja lisamiseks
    window = tk.Toplevel(root)
    window.title("Lisa kasutaja")

    # Loo sildid ja sisendväljad
    tk.Label(window, text="Eesnimi *").pack(pady=2)
    eesnimi = tk.Entry(window)
    eesnimi.pack(pady=2)

    tk.Label(window, text="Perenimi *").pack(pady=2)
    perenimi = tk.Entry(window)
    perenimi.pack(pady=2)

    tk.Label(window, text="Email *").pack(pady=2)
    email = tk.Entry(window)
    email.pack(pady=2)

    tk.Label(window, text="Telefon *").pack(pady=2)
    tel = tk.Entry(window)
    tel.pack(pady=2)

    tk.Label(window, text="Profiilipilt (URL)").pack(pady=2)
    profiilipilt = tk.Entry(window)
    profiilipilt.pack(pady=2)

    # Lisa nupp vormi esitamistamiseks
    tk.Button(window, text="Lisa", command=add_user).pack(pady=10)

# Loo peamine Tkinter aken
root = tk.Tk()
root.title("Külaliste andmevaade")

# Otsinguriba raam
search_frame = tk.Frame(root)
search_frame.pack(pady=10, padx=10, fill=tk.X)

# Otsingu silt
search_label = tk.Label(search_frame, text="Otsi nime järgi:")
search_label.pack(side=tk.LEFT)

# Otsinguväli
search_entry = tk.Entry(search_frame)
search_entry.pack(side=tk.LEFT, padx=5, fill=tk.X, expand=True)

# Otsingunupp
search_button = tk.Button(search_frame, text="Otsi", command=on_search)
search_button.pack(side=tk.LEFT, padx=5)

# Andmetabel ja kerimisriba
frame = tk.Frame(root)
frame.pack(pady=10, padx=10, fill=tk.BOTH, expand=True)

scrollbar = tk.Scrollbar(frame)
scrollbar.pack(side=tk.RIGHT, fill=tk.Y)

# Defineeri tabeli veerud
cols = ("id", "eesnimi", "perenimi", "email", "tel", "profiilipilt")
tree = ttk.Treeview(frame, columns=cols, show="headings", yscrollcommand=scrollbar.set)
for col in cols:
    tree.heading(col, text=col.capitalize())  # Veeru pealkiri
    tree.column(col, width=120)  # Veeru laius
tree.pack(fill=tk.BOTH, expand=True)
scrollbar.config(command=tree.yview)  # Sidumine kerimisribaga

# Nupp uue kasutaja lisamiseks
add_button = tk.Button(root, text="Lisa uus kasutaja", command=open_user_form)
add_button.pack(pady=10)

# Lae algandmed tabelisse
load_data_from_db(tree)

# Käivita Tkinter peamine tsükkel
root.mainloop()
